Use Windows Env Var to point to driver's .exe files

    System var:

        GECKO_PATH  ->  C:\Users\Lens\IdeaProjects\PluralsightAutomatedWebTesting\tools_downloads\chromedriver_win32\

    add to PATH:

        %GEKCKO_PATH%;

Finding Elements

    ClassName: unique css className (index for multiple matches)

    Id (prefered): most usefull & absolute

    Name: name property of a HTML element

    TagName: HTML tag

    CssSelector

    LinkText

    PartialLinkText

    XPath: xPath-expression

WebElement Interface methods

    clear

    click

    findElement(s)

    getAttribute

    getCssValue

    sendKeys

    getSize

    getTagName

CssSelector tool:

    https://try.jsoup.org/

        fetch url -> enter url of webPage

        css query -> a[class=rg_l]

Radio Buttons

    often have no ID

        select by name

        select by tag


        <input type="radio" name="color" value="red" checked>Red<br>
        <input type="radio" name="color" value="green">Green<br>
        <input type="radio" name="color" value="blue">Blue<br>

    List<WebElement> radioButtons = webDriver.findElements(By.name("color"));


intellij setting to open an html page from intellij

    allows unsigned requests

Checkboxes

        <input type="checkbox" id="mayoCheckbox" value="mayo"> Mayo<br>
        <input type="checkbox" id="lettuceCheckbox" value="lettuce"> Lettuce<br>
        <input type="checkbox" id="turkeyCheckbox" value="turkey"> Turkey<br>

    WebElement checkboxWebElement = webDriver.findElement(By.id("lettuceCheckbox"));
    checkboxWebElement.click();

select items

        <select id="select1">
                    <option value="yes">Yes</option>
                    <option value="no">No</option>
                    <option value="maybe">Maybe</option>
        </select>

     WebElement selectWebElement = webDriver.findElement(By.id("select1"));
     //wrapperClass from org.openqa.selenium.support.ui.Select;
     Select select = new Select(selectWebElement);
     select.selectByVisibleText("Maybe"

tables

    nested elements identification with XPath

            <table>
                <tr>
                    <td>Table 1 Row 1</td>
                    <td>
                        <table>
                            <tr><td>Table 2 Row 1</td></tr>
                            <tr><td>Table 2 Row 2</td></tr>
                        </table>
                    </td>
                </tr>
            </table>

        WebElement outerTableWebElement = webDriver.findElement(By.tagName("table"));
        WebElement innerTableWebElement = outerTableWebElement.findElement(By.tagName("table"));
        WebElement rowWebElement = innerTableWebElement.findElements(By.tagName("td")).get(1);
        System.out.println(rowWebElement.getText());

     now with xpath:

        WebElement rowWebElement = webDriver.findElement(By.xpath("/html/body/table/tbody/tr/td[2]/table/tbody/tr[2]/td"));
        System.out.println(rowWebElement.getText());

Wait

    implicit wait

    explicit wait




